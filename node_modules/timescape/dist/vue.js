import {
  $NOW,
  TimescapeManager
} from "./chunk-L3U7FLDR.js";

// src/integrations/vue.ts
import { onUnmounted, watch } from "vue";
function useTimescape(options) {
  const manager = new TimescapeManager(options.date);
  manager.subscribe((nextDate) => {
    options.date = nextDate;
  });
  watch(
    () => [
      options.minDate,
      options.maxDate,
      options.hour12,
      options.wrapAround,
      options.digits
    ],
    ([minDate, maxDate, hour12, wrapAround, digits]) => {
      manager.minDate = minDate;
      manager.maxDate = maxDate;
      if (hour12 !== void 0)
        manager.hour12 = hour12;
      if (digits !== void 0)
        manager.digits = digits;
      if (wrapAround !== void 0)
        manager.wrapAround = wrapAround;
    },
    { immediate: true }
  );
  watch(
    () => options.date,
    (nextDate) => manager.date = nextDate
  );
  onUnmounted(() => manager.remove());
  return {
    registerElement: (type) => (element) => element && manager.registerElement(element, type),
    registerRoot: () => (element) => element && manager.registerRoot(element)
  };
}
export {
  $NOW,
  useTimescape
};
