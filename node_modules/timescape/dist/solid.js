import {
  $NOW,
  TimescapeManager
} from "./chunk-L3U7FLDR.js";

// src/integrations/solid.ts
import { createEffect, onCleanup } from "solid-js";
var useTimescape = ([options, setOptions]) => {
  const manager = new TimescapeManager(options().date);
  createEffect(() => {
    manager.subscribe((nextDate) => {
      setOptions((options2) => ({ ...options2, date: nextDate }));
    });
  });
  createEffect(() => {
    manager.date = options().date;
    manager.minDate = options().minDate;
    manager.maxDate = options().maxDate;
    if (options().hour12 !== void 0)
      manager.hour12 = options().hour12;
    if (options().digits !== void 0)
      manager.digits = options().digits;
    if (options().wrapAround !== void 0)
      manager.wrapAround = options().wrapAround;
  });
  onCleanup(() => manager.remove());
  return {
    getInputProps: (type) => ({
      ref: (element) => element && manager.registerElement(element, type)
    }),
    getRootProps: () => ({
      ref: (element) => element && manager.registerRoot(element)
    })
  };
};
export {
  $NOW,
  useTimescape
};
